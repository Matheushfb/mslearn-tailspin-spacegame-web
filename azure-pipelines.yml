parameters:
- name: myCliente
  displayName: Nome da conta do Cliente
  type: string
  default:

trigger: none

stages:
  - stage: InstallTerrform
    jobs:
      - job:
        displayName: "Instalar e testar instala√ß√£o do Terraform"
        steps:
          - task: TerraformInstaller@1
            displayName: 'install terraform'
            inputs:
              terraformVersion: latest

          - task: TerraformCLI@0
            displayName: 'check terraform version'
            inputs:
              command: version

  - stage: ConfigureTerraform
    jobs:
      - job:
        displayName: "Executar init e plan do terraform"
        steps:
          - task: TerraformCLI@0
            displayName: 'terraform init'
            inputs:
              provider: 'aws'
              command: init
            env:
              AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
              AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"

          - task: TerraformCLI@0
            displayName: 'terraform plan'
            inputs:
              command: plan
              commandOptions: '-var cliente=${{parameters.myCliente}}'
            env:
              AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
              AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"


  - stage: BuildLayer
    jobs:
      - job:
        displayName: "Build Layer"
        container: python:3.9
        steps:
          - script: 'python3 --version'
            displayName: 'üîç Check python version'

          - script: |
              python3 -m venv venv_pyodbc
              source venv_pyodbc/bin/activate
              pip install --upgrade pip
              pip install pyodbc -t pyodbc
              pwd
              python -c "import shutil; shutil.make_archive('pyodbc','zip','./pyodbc')"
            displayName: 'üì¶ Build zip file'

          - publish: $(System.DefaultWorkingDirectory)/pyodbc.zip
            artifact: pyodbc

  - stage: ApprovalTimeout
    jobs:
      - job:
        pool: server
        displayName: "Approval Timeout"
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 5
            inputs:
              instructions: 'Please validate the build configuration and resume'
              onTimeout: 'reject'


  - stage: ApplyTerraform
    jobs:
      - job:
        displayName: "Aplicar configura√ß√µes do terraform"
        steps:
          - task: TerraformCLI@0
            displayName: 'terraform init'
            inputs:
              provider: 'aws'
              command: init
              commandOptions: -upgrade
            env:
              AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
              AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"

          - task: DownloadBuildArtifacts@1
            displayName: "Download Artifact TerraformPlan"
            inputs:
              buildType: current
              downloadType: specific
              artifactName: "pyodbc"
              downloadPath: "$(System.DefaultWorkingDirectory)"

          - task: TerraformCLI@0
            displayName: 'terraform apply'
            inputs:
              command: apply
              commandOptions: '-var cliente=${{parameters.myCliente}}'
            env:
              AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
              AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"
